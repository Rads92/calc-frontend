{"version":3,"sources":["components/Navbar.jsx","axios.js","components/ProductForm.jsx","components/StoreComponent.jsx","components/Ciasto/index.jsx","components/InnerNav.jsx","App.js","serviceWorker.js","index.js"],"names":["MyNavbar","Navbar","bg","expand","Brand","to","Toggle","aria-controls","Collapse","id","Nav","className","Button","variant","get","uri","axios","process","post","data","ProductForm","name","goToStore","useState","dostawa","setDostawa","ilosc","setIlosc","cena","setCena","Form","onSubmit","e","preventDefault","toLowerCase","then","Group","controlId","Label","Control","value","required","onChange","target","type","StoreComponent","nameLowerCase","products","setProducts","useEffect","res","deleteProduct","delete","isCiasto","length","Table","striped","bordered","hover","map","prod","index","key","partia","zuzyte","stan","onClick","CiastoForm","setCukier","cukier","filter","el","setSyrop","syrop","setZiola","ziola","NAMES","selectedCukier","setSelectedCukier","selectedSyrop","setSelectedSyrop","selectedZiola","setSelectedZiola","setPartia","selection","selected","console","log","as","event","find","c","onSelect","s","i","newCukier","newSyrop","newZiola","onChangeSelected","max","min","isInvalid","InnerNav","activeTab","setActiveTab","useCallback","productForm","content","activeKey","Item","Link","eventKey","App","window","location","path","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2b990219.chunk.js","sourcesContent":["import React from 'react'\nimport {Link} from \"react-router-dom\"\nimport Nav from 'react-bootstrap/Nav'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Button from 'react-bootstrap/Button'\n\nexport const MyNavbar = () => (\n    <Navbar bg=\"light\" expand=\"lg\">\n        <Navbar.Brand to=\"/ciasto\">Ciasto manager</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"mr-auto\">\n                <Link to=\"/cukier\">\n                    <Button variant=\"secondary\">\n                        Cukier\n                    </Button>\n                </Link>\n                <Link to=\"/syrop\">\n                    <Button variant=\"secondary\">\n                        Syrop\n                    </Button>\n                </Link>\n                <Link to=\"/ziola\">\n                    <Button variant=\"secondary\">\n                        Ziola\n                    </Button>\n                </Link>\n                <Link to=\"/ciasto\">\n                    <Button variant=\"secondary\">\n                        Ciasto\n                    </Button>\n                </Link>\n                {/* DODAC COUNTER CUKRU, SYROPU, ZIOL I CIASTA */}\n            </Nav>\n        </Navbar.Collapse>\n    </Navbar>\n)","import axios from 'axios';\n\nexport const get = uri => {\n    return axios.get(process.env.REACT_APP_API_URL + uri);\n};\n\nexport const remove = uri => {\n    return axios.delete(process.env.REACT_APP_API_URL + uri);\n};\n\nexport const post = (uri, data) => {\n    return axios.post(process.env.REACT_APP_API_URL + uri, data);\n};\n","import React, {useState} from 'react'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport { post } from '../axios';\n\nexport const ProductForm = ({name, goToStore}) => {\n    const [dostawa, setDostawa] = useState('')\n    const [ilosc, setIlosc] = useState('')\n    const [cena, setCena] = useState('')\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        post(name.toLowerCase(), {\n            dostawa,\n            ilosc,\n            cena\n        })\n        .then(() => {\n            goToStore();\n        });\n    }\n    return (\n        <Form onSubmit={onSubmit}>\n            <Form.Group controlId=\"dostawa\">\n                <Form.Label>Dostawa</Form.Label>\n                <Form.Control\n                    value={dostawa}\n                    required\n                    onChange={e => setDostawa(e.target.value)}\n                />\n            </Form.Group>\n            <Form.Group controlId=\"ilosc\">\n                <Form.Label>Ilość</Form.Label>\n                <Form.Control\n                    required\n                    type=\"number\"\n                    value={ilosc}\n                    onChange={e => setIlosc(e.target.value)}\n                />\n            </Form.Group>\n            <Form.Group controlId=\"cena\">\n                <Form.Label>Cena</Form.Label>\n                <Form.Control\n                    type=\"number\"\n                    required\n                    value={cena}\n                    onChange={e => setCena(e.target.value)}\n                />\n            </Form.Group>\n            <Button variant=\"primary\" type=\"submit\">\n                Wyślij\n            </Button>\n        </Form>\n    )\n}","import React, {useEffect, useState} from 'react'\nimport Table from 'react-bootstrap/Table'\nimport Button from 'react-bootstrap/Button'\nimport {get, remove} from '../axios';\n\nexport const StoreComponent = ({name}) => {\n    const nameLowerCase = name.toLowerCase();\n    const [products, setProducts] = useState([])\n    useEffect(() => {\n        get(nameLowerCase)\n            .then(res => setProducts(res.data[nameLowerCase]))\n    }, [name]);\n\n    const deleteProduct = id => {\n        remove(`${nameLowerCase}/${id}`)\n            .then(res => setProducts(res.data[nameLowerCase]))\n    }\n    const isCiasto = nameLowerCase !== 'ciasto';\n\n    return products.length\n        ? (\n            <Table striped bordered hover>\n                <thead>\n                    <tr>\n                        <th>#</th>\n                        <th>Dostawa</th>\n                        <th>Stan początkowy [kg]</th>\n                        {isCiasto && <th>Zużyte [kg]</th>}\n                        <th>Stan obecny [kg]</th>\n                        <th>Cena [zł/kg]</th>\n                        {isCiasto && <th />}\n                    </tr>\n                </thead>\n                <tbody>\n                    {products.map((prod, index) => (\n                        <tr key={`key-${prod.id}`}>\n                            <td>{index + 1}</td>\n                            <td>{prod.dostawa || prod.partia}</td>\n                            <td>{prod.ilosc}</td>\n                            {isCiasto && <td>{prod.zuzyte}</td>}\n                            <td>{prod.stan}</td>\n                            <td>{prod.cena}</td>\n                            <td>\n                                {prod.stan === prod.ilosc && (\n                                <Button variant=\"danger\" onClick={() => deleteProduct(prod.id)}>\n                                    Usuń\n                                </Button>)}\n                            </td>\n                        </tr>\n                    ))}\n                </tbody>\n            </Table>\n        )\n        : <h3>Nic tu nie ma...</h3>\n};\n","import React, {useEffect, useState} from 'react'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport {get, post} from '../../axios';\n\n// Usuwanie inputów\nexport const CiastoForm = ({goToStore}) => {\n    useEffect(() => {\n        get('stan')\n            .then(res => {\n                setCukier(res.data.cukier.filter(el => el.stan > 0))\n                setSyrop(res.data.syrop.filter(el => el.stan > 0))\n                setZiola(res.data.ziola.filter(el => el.stan > 0))\n            });\n    }, []);\n    const NAMES = ['Cukier', 'Syrop', 'Zioła'];\n    const [cukier, setCukier] = useState([])\n    const [syrop, setSyrop] = useState([])\n    const [ziola, setZiola] = useState([])\n    const [selectedCukier, setSelectedCukier] = useState([])\n    const [selectedSyrop, setSelectedSyrop] = useState([])\n    const [selectedZiola, setSelectedZiola] = useState([])\n\n    const [partia, setPartia] = useState('')\n\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        post('ciasto', {\n            partia,\n            cukier: selectedCukier,\n            syrop: selectedSyrop,\n            ziola: selectedZiola,\n        })\n        .then(() => goToStore())\n    }\n\n    const onSelect = (event, name) => {\n        const id = event.target.value;\n        switch (name) {\n            case 'Cukier':\n                setSelectedCukier([...selectedCukier, {...cukier.find(c => +c.id === +id), zuzyte: 0}])\n                setCukier(cukier.filter(c => +c.id !== +id))\n                break;\n            case 'Syrop':\n                setSelectedSyrop([...selectedSyrop, {...syrop.find(c => +c.id === +id), zuzyte: 0}])\n                setSyrop(syrop.filter(c => +c.id !== +id))\n                break;\n            case 'Zioła':\n                setSelectedZiola([...selectedZiola, {...ziola.find(c => +c.id === +id), zuzyte: 0}])\n                setZiola(ziola.filter(c => +c.id !== +id))\n                break;\n            default:\n                break;\n        }\n    }\n\n    const onChangeSelected = (name, index, value) => {\n        switch (name) {\n            case 'Cukier':\n                const newCukier = [...selectedCukier];\n                newCukier[index]['zuzyte'] = +value\n                setSelectedCukier(newCukier)\n                break;\n            case 'Syrop':\n                const newSyrop = [...selectedSyrop];\n                newSyrop[index]['zuzyte'] = +value\n                setSelectedSyrop(newSyrop)\n                break;\n            case 'Zioła':\n                const newZiola = [...selectedZiola];\n                newZiola[index]['zuzyte'] = +value\n                setSelectedZiola(newZiola)\n                break;\n\n            default:\n                break;\n        }\n    }\n    const selection = [selectedCukier, selectedSyrop, selectedZiola];\n\n    return (\n        <Form onSubmit={onSubmit}>\n            <Form.Group controlId=\"partia\">\n                <Form.Label>Partia</Form.Label>\n                <Form.Control\n                    value={partia}\n                    required\n                    onChange={e => setPartia(e.target.value)}\n                />\n            </Form.Group>\n            {[cukier, syrop, ziola].map((el, index) => {\n                const selected = selection[index];\n                console.log(selection)\n                if (el.length || selected.length) {\n                    return (\n                        <div key={index}>\n                            {!!el.length &&(\n                            <Form.Group controlId={NAMES[index]} key={NAMES[index]}>\n                                <Form.Label>{NAMES[index]}</Form.Label>\n                                <Form.Control as=\"select\" onChange={(e) => onSelect(e, NAMES[index])}>\n                                    <option>Wybierz z listy</option>\n                                    {el.map(c => (\n                                        <option key={c.id} value={c.id}>\n                                            {c.dostawa}: Stan: {c.stan} kg - Cena - {c.cena} zł/kg\n                                    </option>))}\n                                </Form.Control>\n                            </Form.Group>\n                            )}\n                            {!!selected.length && selected.map((s, i) => (\n                                <Form.Group controlId={NAMES[index]} key={'choosen' + NAMES[index]}>\n                                    <Form.Label>\n                                        {s.dostawa}: Stan: {s.stan} kg - Cena - {s.cena} zł/kg\n                                    </Form.Label>\n                                    <Form.Control\n                                        type=\"number\"\n                                        required\n                                        value={s.zuzyte}\n                                        onChange={e => onChangeSelected(\n                                            NAMES[index],\n                                            i,\n                                            e.target.value,\n                                        )}\n                                        max={+s.stan}\n                                        min={0}\n                                        isInvalid={s.zuzyte > s.stan}\n                                    />\n                                </Form.Group>))\n                            }\n                        </div>\n                    )\n                }\n            })}\n\n\n            <Button variant=\"primary\" type=\"submit\">\n                Wyślij\n            </Button>\n        </Form>\n    )\n}","import React, {useState, useCallback} from 'react'\nimport Nav from 'react-bootstrap/Nav'\nimport {ProductForm} from './ProductForm'\nimport {StoreComponent} from './StoreComponent'\nimport {CiastoForm} from './Ciasto';\n\nexport const InnerNav = ({name}) => {\n    const [activeTab, setActiveTab] = useState('magazyn');\n    const goToStore = useCallback(\n        () => setActiveTab('magazyn'),\n        [],\n    )\n    const productForm = name === 'Ciasto'\n        ? <CiastoForm goToStore={goToStore}/>\n        : <ProductForm name={name} goToStore={goToStore}/>;\n    const content = activeTab === \"magazyn\"\n        ? <StoreComponent name={name} goToStore={goToStore}/>\n        : productForm;\n\n    return (\n        <>\n            <Nav\n                activeKey={activeTab}\n                className=\"justify-content-center\"\n                variant=\"tabs\"\n                onSelect={setActiveTab}\n            >\n                <Nav.Item>\n                    <Nav.Link eventKey={\"magazyn\"}>{`${name} - Stan magazynowy`}</Nav.Link>\n                </Nav.Item>\n                <Nav.Item >\n                    <Nav.Link eventKey={\"dostawa\"}>{`${name} - Dostawa`}</Nav.Link>\n                </Nav.Item>\n            </Nav>\n            {content}\n        </>\n    )\n};\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\"\nimport { MyNavbar } from './components/Navbar'\nimport { InnerNav } from './components/InnerNav'\n\nfunction App() {\n  console.log(window.location)\n  return (\n    <Router>\n      <MyNavbar />\n      <Switch>\n        <Route path=\"/cukier\">\n          <InnerNav name='Cukier'/>\n        </Route>\n        <Route path=\"/syrop\">\n          <InnerNav name='Syrop'/>\n        </Route>\n        <Route path=\"/ziola\">\n          <InnerNav name='Ziola'/>\n        </Route>\n        <Route path=\"/ciasto\">\n          <InnerNav name='Ciasto'/>\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}